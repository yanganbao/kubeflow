name: integration test
on:
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration-test:
    runs-on: ubuntu-latest

    # Almost similar to the following:
    #
    # ```yaml
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     kubernetes-version: ["v1.23.12", "v1.24.6", "v1.25.2"]
    #     gang-scheduler-name: ["none", "scheduler-plugins"]
    # ```
    # The difference is that each combination is randomly assigned various Python versions
    # to verify Python SDK operations.
    strategy:
      fail-fast: false
      matrix:
        # TODO (tenzen-y): Add volcano.
        include:
          - kubernetes-version: v1.23.12
            gang-scheduler-name: "none"
            python-version: "3.10"
          - kubernetes-version: v1.24.6
            gang-scheduler-name: "none"
            python-version: "3.7"
          - kubernetes-version: v1.25.2
            gang-scheduler-name: "none"
            python-version: "3.8"
          - kubernetes-version: v1.23.12
            gang-scheduler-name: "scheduler-plugins"
            python-version: "3.9"
          - kubernetes-version: v1.24.6
            gang-scheduler-name: "scheduler-plugins"
            python-version: "3.10"
          - kubernetes-version: v1.25.2
            gang-scheduler-name: "scheduler-plugins"
            python-version: "3.10"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.3.0
        with:
          node_image: kindest/node:${{ matrix.kubernetes-version }}
          cluster_name: training-operator-cluster
          kubectl_version: ${{ matrix.kubernetes-version }}

      - name: Build training-operator
        run: |
          ./scripts/gha/build-image.sh
        env:
          TRAINING_CI_IMAGE: kubeflowtraining/training-operator:test

      - name: Deploy training operator
        run: |
          ./scripts/gha/setup-training-operator.sh
        env:
          KIND_CLUSTER: training-operator-cluster
          TRAINING_CI_IMAGE: kubeflowtraining/training-operator:test
          GANG_SCHEDULER_NAME: ${{ matrix.gang-scheduler-name }}
          KUBERNETES_VERSION: ${{ matrix.kubernetes-version }}

      - name: Run tests
        run: |
          pip install pytest
          python3 -m pip install -e sdk/python; pytest sdk/python/test --log-cli-level=info
        env:
          GANG_SCHEDULER_NAME: ${{ matrix.gang-scheduler-name }}
